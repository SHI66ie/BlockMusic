/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SubscriptionManager,
  SubscriptionManagerInterface,
} from "../../contracts/SubscriptionManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum SubscriptionManager.Plan",
        name: "plan",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "SubscriptionCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum SubscriptionManager.Plan",
        name: "plan",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newEndTime",
        type: "uint256",
      },
    ],
    name: "SubscriptionExtended",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "MONTH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MONTHLY_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "THREE_MONTHS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "THREE_MONTHS_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "YEARLY_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cancelSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SubscriptionManager.Plan",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "extendSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SubscriptionManager.Plan",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "getPlanDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SubscriptionManager.Plan",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "getPlanPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getRemainingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isSubscribed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    name: "setUsdcToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum SubscriptionManager.Plan",
        name: "plan",
        type: "uint8",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "enum SubscriptionManager.Plan",
        name: "plan",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610f54380380610f5483398101604081905261002f9161012f565b338061005657604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61005f816100df565b50600180556001600160a01b0381166100ba5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c6964205553444320746f6b656e2061646472657373000000000000604482015260640161004d565b600280546001600160a01b0319166001600160a01b039290921691909117905561015f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561014157600080fd5b81516001600160a01b038116811461015857600080fd5b9392505050565b610de68061016e6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80638da5cb5b116100ad578063d5999a5c11610071578063d5999a5c14610251578063deb4ec5a1461025b578063ecbefab71461026e578063f046395a14610278578063f2fde38b146102c357600080fd5b80638da5cb5b146101f55780638fb456d7146102065780639f809c8f14610211578063b92ae87c1461021b578063ce348ee21461023e57600080fd5b80635d886f22116100f45780635d886f22146101b257806364760b6f146101c5578063715018a6146101d857806383914540146101e057806384a0b329146101eb57600080fd5b80630e85117a1461013157806311eac8551461015757806324e9edb01461018257806349c7e6391461018c57806351cff8d91461019f575b600080fd5b61014461013f366004610c4a565b6102d6565b6040519081526020015b60405180910390f35b60025461016a906001600160a01b031681565b6040516001600160a01b03909116815260200161014e565b61018a61031a565b005b61018a61019a366004610c7a565b6103af565b61018a6101ad366004610c4a565b6105e1565b61018a6101c0366004610c4a565b6107a4565b6101446101d3366004610c7a565b610816565b61018a6108b8565b6101446301e1338081565b6101446266ff3081565b6000546001600160a01b031661016a565b61014463017d784081565b610144622625a081565b61022e610229366004610c4a565b6108cc565b604051901515815260200161014e565b61014461024c366004610c7a565b610913565b61014462278d0081565b61018a610269366004610c7a565b61097e565b6101446276a70081565b6102b3610286366004610c4a565b60036020526000908152604090208054600182015460029092015490919060ff8082169161010090041684565b60405161014e9493929190610cd3565b61018a6102d1366004610c4a565b610b68565b60006102e1826108cc565b6102ed57506000919050565b6001600160a01b038216600090815260036020526040902060010154610314904290610d15565b92915050565b610323336108cc565b61036d5760405162461bcd60e51b815260206004820152601660248201527527379030b1ba34bb329039bab139b1b934b83a34b7b760511b60448201526064015b60405180910390fd5b33600081815260036020526040808220600201805460ff19169055517f71215198e3f86c24dc3af6d0d7f84d0095e5ee736aa56daf9927fae51935e95d9190a2565b6103b7610ba3565b6103c0336108cc565b156104025760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481cdd589cd8dc9a58995960721b6044820152606401610364565b600061040d82610816565b9050600061041a83610913565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590529192506000916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610477573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049b9190610d28565b9050806104e15760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610364565b4260006104ee8483610d4a565b9050604051806080016040528083815260200182815260200160011515815260200187600281111561052257610522610c9b565b90523360009081526003602090815260409182902083518155908301516001820155908201516002808301805492151560ff19841681178255606086015193919261ff001990911661ffff19909216919091179061010090849081111561058b5761058b610c9b565b0217905550506040513391507f0461beb329d7acfbed27b25e75051d4b137810d66ecd6d048744f7b636385ad0906105c890899086908690610d5d565b60405180910390a250505050506105de60018055565b50565b6105e9610bcd565b6002546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610d7c565b9050600081116106a15760405162461bcd60e51b81526020600482015260166024820152754e6f2062616c616e636520746f20776974686472617760501b6044820152606401610364565b60025460405163a9059cbb60e01b81526001600160a01b03848116600483015260248201849052600092169063a9059cbb906044016020604051808303816000875af11580156106f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107199190610d28565b90508061075c5760405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606401610364565b826001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58360405161079791815260200190565b60405180910390a2505050565b6107ac610bcd565b6001600160a01b0381166107f45760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606401610364565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60008082600281111561082b5761082b610c9b565b0361083a5750622625a0919050565b600182600281111561084e5761084e610c9b565b0361085d57506266ff30919050565b600282600281111561087157610871610c9b565b03610881575063017d7840919050565b60405162461bcd60e51b815260206004820152600c60248201526b24b73b30b634b210383630b760a11b6044820152606401610364565b6108c0610bcd565b6108ca6000610bfa565b565b6001600160a01b03811660009081526003602052604081206002015460ff1680156103145750506001600160a01b0316600090815260036020526040902060010154421090565b60008082600281111561092857610928610c9b565b03610937575062278d00919050565b600182600281111561094b5761094b610c9b565b0361095a57506276a700919050565b600282600281111561096e5761096e610c9b565b0361088157506301e13380919050565b610986610ba3565b61098f336108cc565b6109d45760405162461bcd60e51b815260206004820152601660248201527527379030b1ba34bb329039bab139b1b934b83a34b7b760511b6044820152606401610364565b60006109df82610816565b905060006109ec83610913565b6002546040516323b872dd60e01b8152336004820152306024820152604481018590529192506000916001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a49573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6d9190610d28565b905080610ab35760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610364565b3360009081526003602052604081206001015490428210610add57610ad88483610d4a565b610ae7565b610ae78442610d4a565b33600090815260036020526040902060018101829055600290810180549293508892909161ff001990911690610100908490811115610b2857610b28610c9b565b0217905550336001600160a01b03167f9c76d165abbe4b259b04ddf041ab4bda178ed0e4432c75d4bd0d98b76e76a65987836040516105c8929190610d95565b610b70610bcd565b6001600160a01b038116610b9a57604051631e4fbdf760e01b815260006004820152602401610364565b6105de81610bfa565b600260015403610bc657604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6000546001600160a01b031633146108ca5760405163118cdaa760e01b8152336004820152602401610364565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610c5c57600080fd5b81356001600160a01b0381168114610c7357600080fd5b9392505050565b600060208284031215610c8c57600080fd5b813560038110610c7357600080fd5b634e487b7160e01b600052602160045260246000fd5b60038110610ccf57634e487b7160e01b600052602160045260246000fd5b9052565b84815260208101849052821515604082015260808101610cf66060830184610cb1565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561031457610314610cff565b600060208284031215610d3a57600080fd5b81518015158114610c7357600080fd5b8082018082111561031457610314610cff565b60608101610d6b8286610cb1565b602082019390935260400152919050565b600060208284031215610d8e57600080fd5b5051919050565b60408101610da38285610cb1565b826020830152939250505056fea2646970667358221220d62c6c2027c32f4a59f4f1038eac1351b6bd5ab7b5ebe61cb07b5837beb2176664736f6c63430008160033";

type SubscriptionManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscriptionManager__factory extends ContractFactory {
  constructor(...args: SubscriptionManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _usdcToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SubscriptionManager> {
    return super.deploy(
      _usdcToken,
      overrides || {}
    ) as Promise<SubscriptionManager>;
  }
  override getDeployTransaction(
    _usdcToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override attach(address: string): SubscriptionManager {
    return super.attach(address) as SubscriptionManager;
  }
  override connect(signer: Signer): SubscriptionManager__factory {
    return super.connect(signer) as SubscriptionManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionManagerInterface {
    return new utils.Interface(_abi) as SubscriptionManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubscriptionManager {
    return new Contract(address, _abi, signerOrProvider) as SubscriptionManager;
  }
}
